# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: argocd-server-ingress
#   namespace: argo-cd
#   annotations:
#     #cert-manager.io/cluster-issuer: letsencrypt-prod  # Use cert-manager to handle SSL certificates
#     nginx.ingress.kubernetes.io/backend-protocol: "HTTP"  # Backend Argo CD server uses HTTP
#     nginx.ingress.kubernetes.io/force-ssl-redirect: "true"  # Enforce HTTPS
  
# spec:
#   ingressClassName: nginx  # Specify NGINX as the ingress controller
#   rules:
#     - host: argocd.local  # Change this to your domain or local host
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: argocd-server  # Argo CD service handling the request
#                 port:
#                   number: 443  # Argo CD server listens on port 443
                          
#   tls:
#     - hosts:
#         - argocd.local               # The same domain/host for TLS certificate
#       secretName: tls-local  # TLS secret created automatically by cert-manager


apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
  namespace: argo-cd
    app: myapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
        - name: myapp
          image: hashicorp/http-echo
          args:
          - "-text=Hello from myapp, have good fun!"
          ports:
          - containerPort: 5678
          resources:
            limits:
              cpu: "100m"
              memory: "128Mi"
            requests:
              cpu: "50m"
              memory: "64Mi"

---              
apiVersion: v1
kind: Service
metadata:
  name: myapp
  namespace: argo-cd
spec:
  ports:
    - port: 80
      targetPort: 5678
  selector:
    app: myapp

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: myapp-ingress
  namespace: argo-cd
  annotations:
    #cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
 
    
spec:
  ingressClassName: nginx
  rules:
    - host: argocd.local  # Use your domain here
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: myapp
                port:
                  number: 80
  tls:
    - hosts:
        - argocd.local  # Use your domain here
      secretName: tls-local  # Secret will be automatically created by cert-manager

      
